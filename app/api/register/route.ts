import { NextResponse } from "next/server";
import { server } from "@passwordless-id/webauthn";
import prismadb from "@/lib/prismadb";

export async function POST(req: Request) {
  try {
    const body = await req.json();
    const { registration, challenge, username } = body;

    console.log(registration, challenge);

    const expected = {
      challenge: challenge, // whatever was randomly generated by the server
      origin:
        process.env.NEXT_PUBLIC_MODE !== "production"
          ? "http://localhost:3000"
          : "https://biometric-app.vercel.app",
    };

    const registrationParsed = await server.verifyRegistration(
      registration,
      expected
    );

    const createUser = await prismadb.user.create({
      data: {
        username,
        email: "jay@test.com",
        firstname: "jonathan",
        lastname: "ikpen",
        phone: "08127964509",
        matno: "m.20/nd/csit/14533",
        address: "comprehensive rd., amukpe, sapele, delta",
        department: "computer science",
        yearofstudy: "2020",
        credentials: {
          create: [
            {
              user_id: registrationParsed.credential.id,
              publicKey: registrationParsed.credential.publicKey,
              algorithm: registrationParsed.credential.algorithm,
            },
          ],
        },
      },
      include: {
        credentials: true,
      },
    });

    return NextResponse.json({
      createUser,
    });

    // return NextResponse.json({
    //   registrationParsed,
    // });
  } catch (error) {
    console.log("Server Registration: ", error);
    return new NextResponse("Internal error", { status: 500 });
  }
}
